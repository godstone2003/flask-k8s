name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and Tag Docker Image
        run: |
          docker build -t flask-hola:${{ github.sha }} .
          docker tag flask-hola:${{ github.sha }} ${{ secrets.ECR_REPOSITORY_URI }}/flask-hola-repo:latest
          docker tag flask-hola:${{ github.sha }} godstone7o1/flask-hola-repo:latest


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}

      - name: Push image to Amazon ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/flask-hola-repo:latest

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: godstone7o1
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image to DockerHub
        run: |
          docker push godstone7o1/flask-hola-repo:latest


      - name: Install kubectl
        run: |
         curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
         chmod +x kubectl
         sudo mv kubectl /usr/local/bin/


      - name: Update kubeconfig
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name actions-eks-cluster

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s-manifests/deployment.yaml
          kubectl apply -f k8s-manifests/service.yaml
